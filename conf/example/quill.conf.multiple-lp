# Общий вид строк: имя_переменной = [значение] [размерность]
# значение (double) или размерность (string) можно не указывать
# Пробелы и части строк, следующие за '#', игнорируются

# число вычислительных потоков
#n_sr = 16; # default: 8

# шаги численной сетки; если dx не задан, то он вычисляется
# автоматически так, чтобы алгоритм NDFX давал наименьшую дисперсию,
# но был устойчив
dt = 0.015 # lambda
# dx = 0.1 # lambda
dy = 0.2 # lambda
dz = 0.2 # lambda

# длина волны лазерного импульса
lambda = 0.91 um # default: cm; possible: um; lambda_p

# концентрация электронов; используется при добавлении частиц при
# включенном движущемся окне, а также при расчёте шага по x, если он
# не задан явно
ne = 100 ncr # default: cm^{-3}; possible: ncr

# размеры области моделирования
xlength = 18 # default: lambda; possible: um, fs
ylength = 18 # default: lambda; possible: um
zlength = 18 # default: lambda; possible: um

# Можно задать несколько пар t_end, output_period, при этом на отрезке
# [0,t_end_1] будет использоваться output_period_1 и т. д.
# время моделирования
t_end = 3 # default: lambda; possible: um, mm, cm
# период вывода данных в файл
output_period = 1 # default: lambda; possible: um, mm, cm
#
t_end = 8
output_period = 0.05
t_end = 12
output_period = 1

# По умолчанию лазерные импульсы распространяются к центру области;
# величины, задающие лазерный импульс (например, a0y, a0z), относятся
# к координатам x', y', z', где ось x' направлена по движению
# лазерного импульса. Вектора x', y', z' образуют правую тройку, при
# этом y' лежит в плоскости xy, а z' - в полупространстве z>0
# (исключение: в случае, если x' параллелен z, то y' совпадает с y и
# z' лежит в плоскости xy).
# тип огибающей лазерного импульса
f_envelope = focused # default: cos, possible: focused
# по умолчанию лазерные импульсы распространяются к центру области
# моделирования; b_sign = -1 меняет направление магнитного поля
# импульсов и, следовательно, их направление распространения на
# противоположное
b_sign = 1 # default: 1, possible: -1
# поляризация лазерного импульса
polarization = linear # default: linear; possible: circular
# размеры лазерного импульса
xsigma = 2.8 # default: lambda; possible: um, fs
ysigma = 2.8 # default: lambda; possible: um
zsigma = 2.8 # default: lambda; possible: um
# расстояние от центра лазерного импульса до правой границы области
x0 = 13 # default: lambda; possible: um, fs
# координаты центра лазерного импульса относительно центра области
y0 = 3 # default: 0; default units: lambda; possible: um
z0 = 3 # default: 0; default units: lambda; possible: um
# абсолютная фаза импульса
phase = 0 pi # default: 0; default units: rad, possible: pi
# добавление лазерных импульсов - зеркальных отражений относительно
# плоскостей, проходящих через центр области моделирования
lp_reflection = xy&xz&yz # default: off; possible: xy, xz, yz, xy&xz, xy&yz, xz&yz, xy&xz&yz
# заменяет в зеркальном отражении лазерного импульса соответствующее
# значение a0 на -a0, за счёт чего, например, можно изменить
# направление вращения поля в нём в случае циркулярной поляризации;
# нужно задавать для каждого из значений lp_reflection
f_reflection = off&off&y # default: off; possible: y, z, off&z, etc.
# мощность/интенсивность/энергия/безразмерная амплитуда лазерного импульса
#P = 70 TW # peak power; default: cgs; possible: PW, TW
#I = 4e20 W/cm^2 # peak intensity; default: cgs; possible: W/cm^2
W = 100 J # default units: cgs; possible: J
#a0 = 0.9
# если a0y=a0z=0, то используются значения, вычисленные по
# polarization, P, I, W или a0
#a0y = 0
#a0z = 0

# движущееся окно
mwindow = off # default: on; possible: on, off
# компоненты полей для вывода в файл
e_components_for_output = xyz # default: none; possible: x, y, z, xy, xz, yz, xyz
b_components_for_output = xyz # default: none; possible: x, y, z, xy, xz, yz, xyz
# расстояние от правой границы области до плоскости yz, данные в
# которой выводятся в файл;
#x0fout = 9 # default value: xlength/2; default units: lambda; possible: um, fs

# пучок частиц
#beam = on # default: off; possible: on, off
# тип частиц пучка
beam_particles = ph # default: e; possible: e, p, ph
# число частиц в пучке
Nb = 1e4
# энергия частиц в пучке
epsb = 50 # MeV; possible: mc^2
# характерные размеры пучка
xb = 10 # default: lambda; possible: um, fs
rb = 0.5 # default: lambda; possible: um
# расстояние от левой границы области до центра пучка
x0b = 10 # default: lambda; possible: um, fs

# включение ионов (только для плёнок)
ions = on # default: off; possible: on

# список плёнок; все параметры плёнки должны быть обязательно
# определены после film = on для данной плёнки и до того, как
# встретится film = on для следующей плёнки
film = off # default: off; possible: on
# расстояние от левой границы области до левой границы плёнки
x0film = 10 # default: 0; default units: lambda, possible: um, fs
# полная толщина плёнки
filmwidth = 0.2 # default: lambda, possible: um, fs
# толщина части плёнки с линейным ростом плотности от 0 до nfilm
gradwidth = 0 # default units: lambda, possible: um, fs
# концентрация электронов в плёнке
nfilm = 0.5 ne # default: cm^{-3}; possible: ncr, ne
# отношение массы (в массах протона) к заряду (в зарядах протона) для
# иона плёнки
mcr = 1 # default: 1
#
film = off # default: off; possible: on
x0film = 11 # default: 0; default units: lambda, possible: um, fs
filmwidth = 0.4 # default: lambda, possible: um, fs
gradwidth = 0 # default: 0; default units: lambda, possible: um, fs
nfilm = 0.25 ne # default: cm^{-3}; possible: ncr, ne
mcr = 2 # default: 1

# число рядов частиц в ячейке по координатам
xnpic = 2
ynpic = 2
znpic = 2

# сорта частиц, данные о которых следует выводить в файл
particles_for_output = epph # default: e; possible: e, ep, eph, epph

# шаг по энергии в спектре, число точек в спектре и отношение общего
# числа частиц к числу частиц, все характеристики которых выводятся в
# файл, для разных сортов частиц
deps = 1 MeV # default: MeV; possible: mc^2
neps = 800
enthp = 4
#deps_p = 0.5 MeV # default value = deps; default units: MeV; possible: mc^2
#neps_p = 140 # default = neps
enthp_p = 1 # default = enthp
#deps_ph = 0.5 MeV # default value = deps; default units: MeV; possible: mc^2
#neps_ph = 800 # default = neps
#enthp_ph = 10 # default = enthp
# шаг по энергии в ионном спектре в MeV на нуклон
deps_i = 0.5
#neps_i = 800 # default = neps
#enthp_i = 10 # default = enthp

# число частиц каждого сорта для вывода их траекторий в файл
n_tracks = 10 # default = 0
# момент включения алгоритма вывода траекторий частиц
tr_start = 0 # default value = 0; default units: lambda; possible: um, mm, cm
# координаты концов прямого отрезка, с которого в момент времени
# tr_start берутся частицы для отслеживания траекторий; default value = 0
xtr1 = 10.1 # default: lambda; possible: um, fs
ytr1 = 4 # default: lambda; possible: um
ztr1 = 7 # default: lambda; possible: um
xtr2 = 10.1 # default: lambda; possible: um, fs
ytr2 = 10 # default: lambda; possible: um
ztr2 = 7 # default: lambda; possible: um

# алгоритм слияния квазичастиц
#pmerging = on # default: off; possible: on
# критическое отношение числа квазичастиц к числу ячеек
#crpc = 2.0
