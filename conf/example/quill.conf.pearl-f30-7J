# Pearl-like, from parameters of ion acceleration from Burdonov thesis (p. 87),
# except f-number (f = d/F = 1/30, ysigma = 1.22 / f):
#
# linearly polarized laser beam with 910 nm wavelength and 60 fs duration and 8
# J energy (130 TW) and with intensity proportional to (sin r / r)^2.
#
# For use on unn cluster nodes
# число вычислительных потоков
n_sr = 16 # default: 8

# шаги численной сетки; если задан dt, но не задан dx, то dx
# вычисляется автоматически так, чтобы алгоритм NDFX давал наименьшую
# дисперсию, но был устойчив; если dt не задан, то он вычисляется как
# половина критического для данной плотности шага по времени, после dx
# вычисляется автоматически по dt и ne, как написано выше
dt = 0.1 # lambda
# dx = 0.1 # lambda
dy = 0.4 # lambda
dz = 0.4 # lambda

# длина волны лазерного импульса
lambda = 0.91 um # default: cm; possible: um; lambda_p

# концентрация электронов; используется при добавлении частиц при
# включенном движущемся окне, а также при расчёте шага по x, если он
# не задан явно
ne = 0.0007 ncr # default: cm^{-3}; possible: ncr

# размеры области моделирования
xlength = 100 # default: lambda; possible: um, fs
ylength = 150 # default: lambda; possible: um
zlength = 150 # default: lambda; possible: um

# время моделирования
t_end = 100000 # default: lambda; possible: um, mm, cm
# время, при котором добавление частиц (при mwindow == on) на передней границе прекращается
#t_add_mw = 60 # default = t_end, in lambda; possible: um, mm, cm

# период вывода данных в файл
output_period = 100 # default: lambda; possible: um, mm, cm

# тип огибающей лазерного импульса
f_envelope = pearl # default: cos, possible: focused, pearl
# по умолчанию лазерные импульсы распространяются к центру области
# моделирования; b_sign = -1 меняет направление магнитного поля
# импульсов и, следовательно, их направление распространения на
# противоположное
b_sign = -1 # default: 1, possible: -1
# поляризация лазерного импульса
polarization = linear # default: linear; possible: circular
# размеры лазерного импульса (в перетяжке)
xsigma = 19 # default: lambda; possible: um, fs
ysigma = 37 # default: lambda; possible: um
zsigma = 37 # default: lambda; possible: um
# xtarget, ytarget, ztarget - смещение (относительно центра) точки, в направлении которой распространяется лазерный импульс
# Пример: если ytarget = 5, лазерный импульс будет располагаться "выше" центра на 5 lambda
#xtarget = 70 # default: lambda; possible: um
#ytarget = 0 # default: lambda; possible: um
#ztarget = 0 # default: lambda; possible: um
# расстояние от центра лазерного импульса до центра области (или "цели", если задан xtarget)
x0 = 20 # default: lambda; possible: um, fs
# координаты центра лазерного импульса относительно центра области (или "цели", если заданы ytarget, ztarget)
y0 = 0 # default: 0; default units: lambda; possible: um
z0 = 0 # default: 0; default units: lambda; possible: um
# абсолютная фаза импульса
phase = 0 pi # default: 0; default units: rad, possible: pi
# добавление лазерных импульсов - зеркальных отражений заданного
# импульса относительно плоскостей, проходящих через центр области
# моделирования
#lp_reflection = yz # default: off; possible: xy, xz, yz
# заменяет в зеркальном отражении лазерного импульса соответствующее
# значение a0 на -a0, за счёт чего, например, можно изменить
# направление вращения поля в нём в случае циркулярной поляризации
#f_reflection = z # default: off; possible: y, z
# мощность/интенсивность/энергия/безразмерная амплитуда лазерного импульса
#P = 70 TW # peak power; default: cgs; possible: PW, TW
#I = 4e20 W/cm^2 # peak intensity; default: cgs; possible: W/cm^2
#W = 8 J # default units: cgs; possible: J
#a0 = 15
a0y = 2.25
#a0z = 1

# движущееся окно
mwindow = on # default: on; possible: on, off
# компоненты полей для вывода в файл
e_components_for_output = xyz # default: none; possible: x, y, z, xy, xz, yz, xyz
b_components_for_output = xyz # default: none; possible: x, y, z, xy, xz, yz, xyz
# расстояние от правой границы области до плоскости yz, данные в
# которой выводятся в файл;
#x0fout = 10.2 # default value: xlength/2; default units: lambda; possible: um, fs

# пучок частиц
#beam = on # default: off; possible: on, off
# тип частиц пучка
#beam_particles = ph # default: e; possible: e, p, ph
# число частиц в пучке
#Nb = 1e4
# энергия частиц в пучке
#epsb = 50 # MeV; possible: mc^2
# характерные размеры пучка
#xb = 10 # default: lambda; possible: um, fs
#rb = 0.5 # default: lambda; possible: um
# расстояние от левой границы области до центра пучка
#x0b = 10 # default: lambda; possible: um, fs

# включение ионов
#ions = on # default: off; possible: on

# список плёнок; все параметры плёнки должны быть обязательно
# определены после film = on для данной плёнки и до того, как
# встретится film = on для следующей плёнки
#film = on # default: off; possible: on
# расстояние от левой границы области до левой границы плёнки
#x0film = 10 # default: 0; default units: lambda, possible: um, fs
# полная толщина плёнки
#filmwidth = 0.4 # default: lambda, possible: um, fs
# толщина части плёнки с линейным ростом плотности от 0 до nfilm
#gradwidth = 0 # default units: lambda, possible: um, fs
# плотность плёнки
#nfilm = 1 ne # default: cm^{-3}; possible: ncr, ne
#
#film = on # default: off; possible: on
#x0film = 11 # default: 0; default units: lambda, possible: um, fs
#filmwidth = 0.4 # default: lambda, possible: um, fs
#gradwidth = 0 # default: 0; default units: lambda, possible: um, fs
#nfilm = 1 ne # default: cm^{-3}; possible: ncr, ne

# число рядов частиц в ячейке по координатам
xnpic = 1
ynpic = 1
znpic = 1

# сорта частиц, данные о которых следует выводить в файл
particles_for_output = epph # default: e; possible: e, ep, eph, epph

# шаг по энергии в спектре, число точек в спектре и отношение общего
# числа частиц к числу частиц, все характеристики которых выводятся в
# файл, для разных сортов частиц
deps = 2 MeV # default: MeV; possible: mc^2
neps = 500
enthp = 500
#deps_p = 0.5 MeV # default value = deps; default units: MeV; possible: mc^2
#neps_p = 140 # default = neps
enthp_p = 1 # default = enthp
deps_ph = 0.00002 MeV # default value = deps; default units: MeV; possible: mc^2
neps_ph = 500 # default = neps
enthp_ph = 100 # default = enthp

# число частиц каждого сорта для вывода их траекторий в файл
#n_tracks = 50 # default = 0
# момент включения алгоритма вывода траекторий частиц
tr_start = 5 # default value = 0; default units: lambda; possible: um, mm, cm
tr_init = line # default: line; possible: volume
# координаты концов прямого отрезка (tr_init = line) или диагональ
# прямоугольного параллелепипеда (tr_init = volume), с которого в
# момент времени tr_start берутся частицы для отслеживания траекторий;
# default value = 0
xtr1 = 19.5 # default: lambda; possible: um, fs
ytr1 = 1 # default: lambda; possible: um
ztr1 = 10 # default: lambda; possible: um
xtr2 = 19.5 # default: lambda; possible: um, fs
ytr2 = 19 # default: lambda; possible: um
ztr2 = 10 # default: lambda; possible: um

# алгоритм слияния квазичастиц; nl - nonlinear(q), ti -
# type-independently
pmerging = nl # default: off; possible: nl, ti
# критическое отношение числа квазичастиц к числу ячеек
crpc = 1.5

# имя папки для результатов; не забудьте создать её вручную!
data_folder = res_pearl-f30-7J # default: results

# режим вывода данных в файл (пока что только для плотности частиц и компонент
# электромагнитных полей)
output_mode = text # default: text; possible: binary
